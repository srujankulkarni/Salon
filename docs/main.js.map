{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/customer-dialog-component/customer-dialog-component.ts","./src/app/customer-dialog-component/customer-dialog-component.html","./src/app/data-table/data-table.component.ts","./src/app/data-table/data-table.component.html","./src/app/main-nav/main-nav.component.ts","./src/app/main-nav/main-nav.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  title = \"angular-material-table\";\n}\n ","<main-nav>\n  <app-data-table></app-data-table>\n</main-nav>\n\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\n\nimport { MatButtonModule } from \"@angular/material/button\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport { AppComponent } from \"./app.component\";\nimport { MainNavComponent } from \"./main-nav/main-nav.component\";\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport { DataTableComponent } from \"./data-table/data-table.component\";\nimport { CustomerDialogComponent } from './customer-dialog-component/customer-dialog-component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {  MatSelectModule } from '@angular/material/select';\nimport {  MatInputModule  } from '@angular/material/input';\nimport \"@angular/compiler\"\n@NgModule({\n  declarations: [AppComponent, MainNavComponent, DataTableComponent, CustomerDialogComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n\n  ],\n  exports: [ MatFormFieldModule, MatInputModule ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [CustomerDialogComponent]\n})\nexport class AppModule {}\n","import {Component, Inject, OnInit, ViewEncapsulation} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\nimport {FormBuilder, Validators, FormGroup} from \"@angular/forms\";\n@Component({\n  selector: 'app-customer-dialog-component',\n  templateUrl: './customer-dialog-component.html',\n  styleUrls: ['./customer-dialog-component.css']\n})\nexport class CustomerDialogComponent implements OnInit {\n    data:any[];\n  form: FormGroup;\n  description:string;\nphone:string;\nbarber:string;\ninchair:boolean=false;\n  constructor(\n      private fb: FormBuilder,\n      private dialogRef: MatDialogRef<CustomerDialogComponent>,\n      @Inject(MAT_DIALOG_DATA) data) {\n\n      this.description = data.description;\n\n      this.form = fb.group({\n        description: [this.description, Validators.required],\n        phone: [this.phone, Validators.required],\n\n        barber: [this.barber,Validators.required]\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n  save() {\n\n    this.data=  JSON.parse(sessionStorage.getItem(\"data\"));\n    let row= {  name: this.form.get('description').value, inchair: false, barber: this.form.get('barber').value, phone: this.form.get('phone').value }\n    this.data.push(row);\n    sessionStorage.setItem(\"data\",JSON.stringify(this.data))\n    window.location.reload();\n  }\n\n  close() {\n      this.dialogRef.close();\n  }\n\n}\n","<h2 mat-dialog-title>{{description}}</h2>\n\n\n<mat-dialog-content [formGroup]=\"form\">\n\n    <mat-form-field>\n\n        <input matInput\n                placeholder=\"Name\"\n               formControlName=\"description\">\n\n    </mat-form-field>\n    <mat-form-field>\n\n        <input matInput\n        placeholder=\"Phone Number\"\n       formControlName=\"phone\">\n\n    </mat-form-field>\n    <mat-form-field>\n\n        <mat-select placeholder=\"Select Barber\"\n            formControlName=\"barber\" >\n\n            <mat-option value=\"Joe\">\n                Joe</mat-option>\n            <mat-option value=\"Gary\">\n                Gary</mat-option>\n           \n\n        </mat-select>\n\n    </mat-form-field>\n\n  \n\n   \n\n\n</mat-dialog-content>\n\n<mat-dialog-actions>\n\n    <button class=\"mat-raised-button\"\n            (click)=\"close()\">\n        Close\n    </button>\n\n    <button class=\"mat-raised-button mat-primary\"\n            (click)=\"save()\">\n        Save\n    </button>\n\n</mat-dialog-actions>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { DataTableDataSource } from \"./data-table-datasource\";\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {CustomerDialogComponent} from \"../customer-dialog-component/customer-dialog-component\"\n\n@Component({\n  selector: \"app-data-table\",\n  templateUrl: \"./data-table.component.html\",\n  styleUrls: [\"./data-table.component.css\"],\n})\nexport class DataTableComponent implements OnInit {\n\n  dataSource:any[];\n  today: number = Date.now();\n  check:any[];\n  data:any[];\n  datanew:any[];\n  datasss:any[];\n  EXAMPLE_DATA= [\n    {number:1, name: \"Srujan\", inchair: true, barber: \"Joe\", phone: 10 },\n    {number:2,name: \"Avinash\", inchair: true, barber: \"Gary\", phone: 10 },\n    { number:3, name: \"Abhijeet\", inchair: false, barber: \"Gary\", phone: 10 },\n\n  ];\n  constructor(private dialog: MatDialog) {setInterval(() => {this.today = Date.now()}, 1);\n  this.check=JSON.parse(sessionStorage.getItem(\"data\"));\n  if(this.check!== null){\n\n  }else{\n    sessionStorage.setItem(\"data\",JSON.stringify(this.EXAMPLE_DATA))\n  }\n\n}\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = [\"number\", \"name\", \"phone\",\"barber\",\"inchair\"];\n\n  ngOnInit() {\n\n    this.dataSource =JSON.parse(sessionStorage.getItem(\"data\"));\n  }\n  changeinchair(row){\n    debugger\n    console.log(row);\n    this.data=  JSON.parse(sessionStorage.getItem(\"data\"));\n    let filterdata = this.data.filter(e=> e.barber ==row[\"barber\"] && e.inchair==true);\n    row[\"inchair\"]=true;\n    filterdata[0][\"inchair\"]=false;\n    row[\"number\"]=filterdata[0][\"number\"]\n    //this.data.slice(this.data.findIndex(e=> e.barber ==row[\"barber\"] && e.inchair==true))\n    //this.data.slice(this.data.findIndex(e=> e.barber ==row[\"barber\"] && e.name==row[\"name\"]&& e.phone==row[\"phone\"]))\n    let removedata=this.data.filter(e=> e.name !=row[\"name\"] );\n    this.datanew=removedata;\n    let removedatan=this.datanew.filter(e=>e.name!=filterdata[0][\"name\"])\n    this.datanew=removedatan;\n    //this.datanew.push(filterdata[0]);\n    this.datanew.push(row);\n    sessionStorage.setItem(\"data\",JSON.stringify(this.datanew))\n    window.location.reload();\n\n  }\n  openDialog() {\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n\n    dialogConfig.data = {\n        id: 1,\n        title: 'Angular For Beginners'\n    };\n\n    this.dialog.open(CustomerDialogComponent, dialogConfig);\n\n    const dialogRef = this.dialog.open(CustomerDialogComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(\n        data => console.log(\"Dialog output:\", data)\n    );\n}\n\n}\n","<!-- Data passed to the mat-table component using the dataSource input.\nMat-sort header is used to allow each column to be sorted in asc or desc order -->\n<div class=\"mat-elevation-z8 data-table\">\n  <p>{{today | date:'fullDate'}} {{today | date:'h:mm:ss a'}}</p>\n  <button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" (click)=\"openDialog()\">Add Customer</button>\n  <table class=\"table table-striped\">\n    <thead>\n        <tr>\n          <th>Number</th>\n          <th>Name</th>\n          <th>Phone</th>\n          <th>Barber</th>\n          <th>Detail</th>\n        </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let row of dataSource\">\n        <td>{{ row.number }}</td>\n        <td>{{ row.name }}</td>\n        <td>{{ row.phone }}</td>\n        <td>{{ row.barber }}</td>\n        <td><div *ngIf=\"row.inchair\">In Chair with {{row.barber}}</div><div *ngIf=\"!row.inchair\"><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\"  (click)=\"changeinchair(row)\">Move to chair</button></div></td>\n      </tr>\n    </tbody>\n  </table>\n\n\n  <!-- Add a paginator -->\n\n</div>\n","import { Component } from \"@angular/core\";\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: \"main-nav\",\n  templateUrl: \"./main-nav.component.html\",\n  styleUrls: [\"./main-nav.component.css\"],\n})\nexport class MainNavComponent {\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map((result) => result.matches));\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n"," <mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    fixedInViewport=\"true\"\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"!(isHandset$ | async)\"\n  >\n    <mat-toolbar color=\"primary\">Menu</mat-toolbar>\n    <!-- <mat-nav-list>\n      <a mat-list-item href=\"#\">Side Link 1</a>\n      <a mat-list-item href=\"#\">Side Link 2</a>\n      <a mat-list-item href=\"#\">Side Link 3</a>\n    </mat-nav-list> -->\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <!-- <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\"\n      >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>angular-material-table</span>\n      <span class=\"spacer\"></span>\n      <a href=\"#\">Link 1</a>\n      <a href=\"#\">Link 2</a>\n      <a href=\"#\">Link 3</a>\n    </mat-toolbar> -->\n    <ng-content></ng-content>\n  </mat-sidenav-content>\n</mat-sidenav-container> -->\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}